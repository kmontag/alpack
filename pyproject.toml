[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "alpacka"
dynamic = ["version"]
description = 'Generate custom Ableton Live packs'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Kevin Montag", email = "kmontag@cs.stanford.edu" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/kmontag/alpacka#readme"
Issues = "https://github.com/kmontag/alpacka/issues"
Source = "https://github.com/kmontag/alpacka"

[tool.hatch.version]
path = "src/alpacka/__about__.py"

# [tool.hatch.envs.hatch-test]
# extra-dependencies = [
#   "pytest-asyncio~=0.23.7",
# ]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/alpacka tests}"

[tool.coverage.run]
source_pkgs = ["alpacka", "tests"]
branch = true
parallel = true
omit = [
  "src/alpacka/__about__.py",
]

[tool.coverage.paths]
alpacka = ["src/alpacka", "*/alpacka/src/alpacka"]
tests = ["tests", "*/alpacka/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
disallow_untyped_defs = true

[tool.ruff.lint]
# - ARG: unused arguments
# - B: flake8-bugbear
# - E: pycodestyle errors
# - I: import sorting
# - W: pycodestyle warnings
extend-select = ["ARG", "B", "E", "I", "W"]
# Turn off strict max line length; B950 allows for exceeding the max
# line length in some cases.
extend-ignore = ["E501"]
